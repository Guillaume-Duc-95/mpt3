function test_polyhedron_computevrep_01_pass
% wrong vertices returned if input is not in minimal representation (issue
% #131)

A = [-0.584244044911839 0.811578028278891;-0.581748755912863 -0.813368541925391;0.161600880466547 -0.986856197950054;0.196855913174092 0.980432429822879;-0.202168114540521 -0.979350832675977;0.817061220440044 0.576550918872762;-0.273481171810843 -0.961877356353173;0.196202427019426 0.98056341336585;0.817409491173812 -0.576057049031578;0.0239458707305332 0.999713256526568;0 -1;1 0;0.584244044911839 -0.811578028278891;0.581748755912863 0.813368541925391;-0.161600880466547 0.986856197950054;-0.196855913174092 -0.980432429822879;0.202168114540521 0.979350832675977;-0.817061220440044 -0.576550918872762;0.273481171810843 0.961877356353173;-0.196202427019426 -0.98056341336585;-0.817409491173812 0.576057049031578;-0.0239458707305332 -0.999713256526568;0 1;-1 0];
b = [-0.0147028983679255;-0.162846895009167;-0.0537024887672983;0.263158724006511;-0.113489306518343;0.376144807663179;-0.12388405992409;0.262982016948695;0.145461315684078;0.213237595389724;-0.0816492769363041;0.319067958018169;0.0309107745558671;0.348740110120525;0.152860196759389;-0.112697020248007;0.264591715027993;-0.179704654139771;0.28322077559221;-0.112599387231301;-0.0791849293194631;-0.0856079709429027;0.205846127144337;-0.158367162692208];
P = Polyhedron(A, b);
P.computeVRep();
% must have 14 vertices (6 if things went wrong)
assert(size(P.V, 1)==14);

end
