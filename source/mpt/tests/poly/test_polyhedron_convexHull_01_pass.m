function test_polyhedron_convexHull_01_pass
%
% 
% This test must return irrendundant representation.
% 

H = [
  -0.577400000000000  -0.577400000000000   3.464200000000000
   0.348200000000000   0.696300000000000   0.870400000000000
  -0.348200000000000  -0.696300000000000   2.611200000000000
   0.115641600054468   0.245640454364788   0.900437119331643
  -0.115641600054468  -0.245640454364788   1.507362880668357
   0.027666412229095   0.026988134783699   0.159878666330402
  -0.027666412229095  -0.026988134783699   0.241321333669598
   1.000000000000000                   0   5.000000000000000
  -1.000000000000000                   0   5.000000000000000
                   0  -1.000000000000000   3.149640560150146
   0.000000000000000  -0.000000000000000   1.999999999999999
  -0.519760797115998  -1.979483162936927   3.239356807855658
  -0.005315911325197  -0.540045755356611   1.542710395309365
   0.134999236453459  -0.010897305140175   0.943399510665809
   0.577400000000000   0.577400000000000   2.309400000000001
  -0.000000000000000  -0.000000000000001   2.000000000000001
   0.519760797115998   1.979483162936927  -1.239356807855658
   0.005315911325197   0.540045755356611   0.457289604690634
  -0.134999236453459   0.010897305140175   1.056600485562576
   7.656431552663482  17.654867496689629 -21.983245753782647
   3.848000585407875  10.806767937123592 -14.730917716906642
  -1.000000000000000                   0   5.000000000000000
                   0  -1.000000000000000   3.149640693250670
   1.000000000000000                   0   5.000000000000000
                   0   1.000000000000000   3.149640560150146];
        
 P = Polyhedron('H',H);
 
 P.minHRep();
 
 if size(P.H,1)~=4
     error('Here should be only 4 inequalities left.');
 end

 end
