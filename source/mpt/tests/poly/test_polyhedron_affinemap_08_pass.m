function test_polyhedron_affinemap_08_pass
%
% polyhedron array, lifting
%

H1 = [    0.6857    0.6081    1.8221
    0.8069    0.6519    3.3616
    0.4539    0.2118    1.7481
    0.6904    0.7714    7.7996
    0.9344    0.0329    7.5710
    0.7957    0.2127    9.7483
    0.9659    0.1128    6.4649
    0.1414    0.3487    2.6381
    0.5974    0.0510    0.7585
    0.5961    0.5227    6.4126];
H2 = [   -0.3873   -0.7420    3.5204
    1.5862   -0.6787    2.1260
   -0.0655    1.2439    3.3545
    0.0574    0.1420    3.1478
    0.7950   -0.8864    3.2628
   -0.6911   -0.7855    3.8462
   -0.2142    1.3328    0.5458
    0.2640   -0.5019    0.0433
    0.6129   -1.4212    2.9626
    1.0571   -1.5142    2.3230
   -1.7702    0.9525    0.8301
    0.7930    1.0090    3.5524
   -1.7379    1.9985    3.0384
   -0.9400    0.5341    2.4647
    0.1505    0.6850    0.0317
    1.0381    0.2153    1.6911
   -0.7787    0.8959    3.1285
    0.1894    0.6251    3.1487];
He2 = [  -0.4164   -1.5009    0];
V = [   -3.7444  -17.9921
   -0.3744  -20.1176
  -13.5430   16.4010
   -5.3513  -26.6316
    8.8490   11.1056
    4.5597  -19.7059
   -1.5742   15.6369
   18.1566   16.5192
   20.6875    2.7600
   -4.9666    6.9470
    6.1021    5.9393
  -24.6310   16.8423
   -4.6800  -20.1420
  -13.6995   -4.0623];

P(1) = Polyhedron('H',H1);
P(2) = Polyhedron('H',H2,'He',He2);
P(3) = Polyhedron(V);

% projection
A = [1.5329   -0.4111
   -0.3920   -0.7412
    0.1446   -0.8065
    0.7518    0.2397];
Q = P.affineMap(A);

if any(Q.isEmptySet)
    error('Any of Q should not be empty.');
end

for i=1:3
    % test the map via gridding of bounded subset
    if ~isBounded(P(i))
        Pn = Polyhedron('H',P(i).H,'lb',-10*ones(2,1),'ub',10*ones(2,1));
    else
        Pn = P(i);
    end
    x = Pn.grid(10);
    
    y = zeros(size(x,1),4);
    for j=1:size(x,1)
        y(j,:) = transpose(A*x(j,:)');
        if ~Q(i).contains(y(j,:)')
            error('Point outside of the affine map.');
        end
    end
end



end
