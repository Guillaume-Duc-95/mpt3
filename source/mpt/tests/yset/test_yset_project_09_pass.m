function test_yset_project_09_pass
%
% bounded, lower-dimensional and unbounded polyhedron in 3D
%

x = sdpvar(3,1);

A1 = [ -0.095844    0.0018785      -0.9161
      -1.5935         2.46      0.61733
     0.034454       1.3579      0.54751
     -0.73588     -0.30165      -1.1708
     -0.90115      0.38937     -0.24941
     -0.73014     -0.38477     -0.60371
      0.21347     -0.82795     -0.14223
     -0.11294      0.80519      -0.5735
       1.3391      -1.0551       1.9515
      -2.1303      0.75001       1.0562
      -0.1543       0.8529       1.0577
      -1.0243      -2.1022        1.261
      -1.9576     -0.83202       2.3067
       1.1857     -0.82122      -0.8617
    -0.065368      0.33586      -2.1858
      -1.4163      -1.8097      -3.1834
     -0.49538      0.59299      0.79579];
 
A2 = [0.78524       -1.466     -0.82404
      -1.3218     -0.98249     -0.89799
     -0.26334      0.31914      0.65262
     -0.49518      0.64417      -1.4476
     -0.22254      -2.0423      0.30608
      -1.3073       1.0197       2.5417
      0.26413       1.6883     -0.37948
    -0.088877     -0.40193      0.13436
     -0.88224     -0.92156     -0.74397
       1.7678      0.38973       0.7881
     -0.34102      0.84284     -0.15083
      0.27521      0.65746      0.91858];
  
A3 = [0.11202     -0.11189      0.23134
      0.99536     -0.13923     -0.48977
      -1.6855      0.82832       1.0858
      0.34137      0.36558     -0.59802];
  
F1 = (A1*x<=3*ones(17,1));
F2 = [(A2*x<=ones(12,1)); ( [-0.5 3 0]*x == 1 )];
F3 = (A3*x<=2*ones(4,1));

P1 = YSet(x,F1);
P2 = YSet(x,F2);
P3 = YSet(x,F3);

P = [P1;P2;P3];

% none from P contains this point
z = [ -1.9107       1.3343        1.031];

s = P.project(z);

for i=1:3
    if ~P(i).contains(s(i).x)
        error('The point must be inside the set.');
    end
end

% slight perturbation must kick the point out of the set
for i=1:3
    if P(i).contains(s(i).x+0.0001*ones(3,1))
        error('The point must be inside the set.');
    end
end


end
