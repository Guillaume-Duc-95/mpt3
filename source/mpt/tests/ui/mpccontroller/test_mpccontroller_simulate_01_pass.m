function test_mpccontroller_simulate_01_pass
%
% closed-loop simulation using the prediction model

Double_Integrator
model = mpt_import(sysStruct, probStruct);
E = MPCController(model, probStruct.N);

Z = E.simulate([2; 1], 10);
Xgood = [2 2 1.5 0.720368988821463 0.322548836584722 0.13125699336434 0.0454699318509728 0.0104784626744474 -0.0016973922455181 -0.00454551596539856 -0.00413364508022532;1 0.5 -1.11022302462516e-16 -0.389815505589269 -0.393817828913005 -0.292554836066693 -0.18917094879003 -0.112081208983278 -0.0621285319516217 -0.0324883278357511 -0.0160382284752889];
Ugood = [-0.999999999999999 -1 -0.779631011178537 -0.0080046466474728 0.202525985692624 0.206767774553325 0.154179479613505 0.0999053540633123 0.0592804082317413 0.0329001987209243];
Ygood = [2 2 1.5 0.720368988821463 0.322548836584722 0.13125699336434 0.0454699318509728 0.0104784626744474 -0.0016973922455181 -0.00454551596539856;1 0.5 -1.11022302462516e-16 -0.389815505589269 -0.393817828913005 -0.292554836066693 -0.18917094879003 -0.112081208983278 -0.0621285319516217 -0.0324883278357511];
Jgood = [15.3190488687449 9.31904886874491 4.06904886874491 1.21122435515364 0.540272672332216 0.240125663099537 0.0945560200927455 0.0329315455902018 0.010278470232513 0.00290146780949231];
assert(norm(Z.X-Xgood)<1e-7);
assert(norm(Z.U-Ugood)<1e-7);
assert(norm(Z.Y-Ygood)<1e-7);
assert(norm(Z.cost-Jgood)<1e-7);

end
