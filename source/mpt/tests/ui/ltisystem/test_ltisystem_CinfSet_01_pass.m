function test_ltisystem_CinfSet_01_pass
% tests LTISystem/CinfSet()

Double_Integrator
sysStruct.xmax = sysStruct.ymax;
sysStruct.xmin = sysStruct.ymin;
L = LTISystem(sysStruct);

% no X and U
C = L.invariantSet();
Agood = [-1 -6.00000000000001;1 5.99999999999999;-1 -5;1 5;-1 -4;1 4;-1 -3;1 3;-1 -2;1 2;-1 -1;1 1;-1 -0;1 0];
bgood = [18.5;18.5;15;15;12;12;9.49999999999999;9.5;7.5;7.5;6;6;5;5];
Cgood = Polyhedron('A', Agood, 'b', bgood);
assert(C==Cgood);

% no U
X = Polyhedron('lb', [-5; -5], 'ub', [10; 1]);
C = L.invariantSet('X', X);
Hgood = [-0.707106781186547 -0.707106781186547 4.24264068711928;-0.316227766016838 -0.948683298050514 3.00416377715996;-0.196116135138184 -0.98058067569092 2.94174202707276;-0.14142135623731 -0.989949493661167 3.18198051533946;-0.124034734589208 -0.992277876713668 3.34893783390863;-0.164398987305357 -0.986393923832144 3.04138126514911;-0.242535625036333 -0.970142500145332 2.910427500436;-0.447213595499958 -0.894427190999916 3.35410196624968;1 0 10;0 1 1;-1 0 5];
Cgood = Polyhedron('H', Hgood);
assert(C==Cgood);

% U is given
U = Polyhedron('lb', -0.5, 'ub', 0.5);
C = L.invariantSet('U', U);
Hgood = [-0.707106781186547 -0.707106781186547 3.88908729652601;-0.316227766016838 -0.948683298050514 2.29265130362207;-0.196116135138184 -0.98058067569092 1.96116135138184;-0.14142135623731 -0.989949493661167 1.94454364826301;-0.110431526074847 -0.993883734673619 2.04298323238466;-0.124034734589208 -0.992277876713668 1.98455575342733;-0.164398987305357 -0.986393923832144 1.93168810083795;-0.242535625036333 -0.970142500145332 2.06155281280883;-0.447213595499958 -0.894427190999916 2.79508497187474;0.110431526074847 0.993883734673619 2.04298323238466;0.124034734589208 0.992277876713668 1.98455575342733;0.14142135623731 0.989949493661167 1.94454364826301;0.164398987305357 0.986393923832144 1.93168810083795;0.196116135138184 0.98058067569092 1.96116135138184;0.242535625036333 0.970142500145332 2.06155281280883;0.316227766016838 0.948683298050514 2.29265130362207;0.447213595499958 0.894427190999916 2.79508497187474;0.707106781186547 0.707106781186547 3.88908729652601;1 0 5;-1 0 5];
Cgood = Polyhedron('H', Hgood);
assert(C==Cgood);

end
