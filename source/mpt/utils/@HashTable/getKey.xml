<?xml version="1.0" encoding="utf-8" ?>

<help>
	<function>getKey</function>
	
	<!-- one-line description of the function -->
	<info>
		Retrieve key for given element index.
	</info>
	
	<syntax>key = getKey(h,index)</syntax>
	<syntax>key = h.getKey(index)</syntax>

	<!-- long description of the function -->
	<descr>
        Retrieve <tt>key</tt> to the element indexed with index <tt>index</tt> for HashTable object <tt>h</tt>.
        If <tt>index</tt> is greater than the number of elements in the hash table, the function returns an
        error.
	</descr>
	<!-- now describe input arguments -->
	
	<!-- mark inputs as mandatory by providing the "required" attribute -->
	<input required="true">
		<name>h</name>
        <descr>The HashTable object with at least 1 element.</descr>
		<!-- any class name can be used, it can even be omitted -->
		<class name="HashTable"/>
	</input>

    <input required="true">
		<name>index</name>
        <descr>Index of the element.</descr>
		<!-- any class name can be used, it can even be omitted -->
		<class name="double"/>
	</input>

	<!-- now describe output arguments -->
	<output>
		<name>key</name>
        <descr>The key that is associated to given <tt>index</tt>.</descr>
		<class name="char or double"/>
	</output>

	<!-- we can provide multiple code examples -->
    <example>
            <!-- each example is a combination of descriptions and commands -->
        <descr>Construct empty table</descr>		
        <cmd>h = HashTable</cmd>
        <descr>Put first element inside the table with <tt>key</tt>as a string and some data. </descr> 
        <cmd> h.put('first',struct('data',1)); </cmd>		
        <descr>Put second element with <tt>key</tt> as integer and another data.</descr>
        <cmd> h.put(2,struct('data',2)) </cmd>
        <descr> Extract the key for the first element</descr>
        <cmd> h.getKey(1) </cmd>
        <descr> Extract the key for the second element</descr>
        <cmd> h.getKey(2) </cmd>
	</example>


	<!-- multiple related function can be defined -->
	<related>HashTable</related>
    <related>put</related>
    <related>getIndex</related>
    <related>removeByKey</related>
    <related>removeByIndex</related>
	
	
	<!-- multiple authors can be defined -->
	<author macro="author_herceg"/>

	<!-- finally, the text of the license -->
	<license macro="GPL2"/>
</help>
