<?xml version="1.0" encoding="utf-8" ?>

<help>
	<function>mpt_demo_functions2</function>
	
	<!-- one-line description of the function -->
	<info>
        Demonstration of functions over unions of  polyhedra
	</info>
	
    <syntax>mpt_demo_functions2</syntax>

	<!-- long description of the function -->
	<descr>
        Demonstration of functions over unions of polyhedra.
	</descr>

    <example>
        <descr> Constructing union of triangular polyhedra </descr>
        <descr> Create random polyhedron </descr>
        <cmd> P = 10*ExamplePoly.randVrep </cmd>
        <descr> Triangulate the polyhedron to get a complex. </descr>
        <cmd> T = P.triangulate </cmd>
        <descr> For each of the polyhedron, assign affine function </descr>
        <cmd>
            for i=1:numel(T)
                T(i).addFunction(AffFunction(eye(2),[-1;1]),'phi');
            end
        </cmd>
        
        <descr> Construct the polyunion object U. </descr>
        <cmd> U = PolyUnion('Set',T,'FullDim',true,'Bounded',true,'Overlaps',false,'Convex',true) </cmd>
        
        <descr> Plot the function over the polyhedra </descr>
        <cmd> U.fplot </cmd>
    </example>
    <example>
        <descr> Construct overlapping union </descr>
        <descr> Create 3 random polyhedra. </descr>
        <cmd>
            for i=1:3
            Q(i) = ExamplePoly.randVrep+5*rand(2,1);
            end
        </cmd>
        <descr> Assign two quadratic functions to each of the polyhedra. </descr>
        <cmd>
            for i=1:3
            Q(i).addFunction(QuadFunction(eye(2),randn(1,2),randn(1)),'alpha');
            Q(i).addFunction(QuadFunction(eye(2),randn(1,2),randn(1)),'beta');
            end
        </cmd>
        <descr> Create union without specifying any properties. </descr>
        <cmd> PU = PolyUnion(Q) </cmd>
        <descr> Plot the functions over polyhedra. </descr>
        <cmd> PU.fplot('beta') </cmd>
        
        <descr> Plot the functions over polyhedra based with some properties</descr>
        <cmd> PU.fplot('beta',1,'Polyhedron',true) </cmd>
    </example>

    
	<!-- multiple related function can be defined -->
    <related>mpt_demo_functions1</related>
	
	<!-- multiple authors can be defined -->
	<author macro="author_herceg"/>

	<!-- finally, the text of the license -->
	<license macro="GPL2"/>
</help>
