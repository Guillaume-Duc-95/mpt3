<?xml version="1.0" encoding="utf-8" ?>

<help>
	<function>plot</function>
	
	<!-- one-line description of the function -->
	<info>
		Plot the convex set.
	</info>
	
	<syntax>h = plot(Set, 'Prop1', value1, 'Prop2', value2)</syntax>
	<syntax>h = Set.plot('Prop1', value1, 'Prop2', value2)</syntax>

	<!-- long description of the function -->
	<descr>
        Plot the general convex set up to dimension three.

        Figure properties, such as color, line width, etc, can be specified with "Property" - "Value" pairs. 
	</descr>
	
	<!-- mark inputs as mandatory by providing the "required" attribute -->
	<input required="true">
		<name>Set</name>
        <descr>Any object derived from the <tt>ConvexSet</tt> class, e.g. <tt>Polyhedron</tt>, <tt>YSet</tt>, ...</descr>
		<class name="ConvexSet"/>
	</input>
	<input>
		<name>Prop1</name>
        <descr>Specification of figure properties.</descr>
		<class name="char">
                <option>Grid</option><descr>With how many gridpoints to grid the circle/sphere. Default is 40.</descr>
                <option>Color</option><descr>The color of the plot specified by real RGB vector or a string name of the color (e.g. 'gray');</descr>
                <option>Wire</option><descr>Highlight or not the edges of the set. Default is false.</descr>
                <option>LineStyle</option><descr>Specify the type of the line to plot edges of the set. Accepted values are '-',':','-.','--', and'none'.</descr>
                <option>LineWidth</option><descr>Specify the width of the line. Default is 1.</descr>
                <option>Alpha</option><descr>Transparency of the color. The value must be inside [0,1] interval. Default is 1.</descr>
                <option>Marker</option><descr>Type of markings to use. Allowed values are ".", "o", "x", "+", "*", "s", "d", "v", "\^", "&lt;", "&gt;", "p", "h" or "none". Default is "none".</descr>
                <option>MarkerSize</option><descr>The size of the marker. Default is 6.</descr>
                <option>ColorMap</option><descr>Color map given either as a M-by-3 matrix, or as a string. Default is 'mpt'. Other available options
                                                are 'hsv', 'hot', 'gray', 'lightgray', 'bone', 'copper', 'pink', 'white', 'flag', 'lines', 'colorcube',
                                                'vga', 'jet', 'prism', 'cool', 'autumn', 'spring', 'winter', 'summer'.
                                            </descr>
                <option>ColorOrder</option><descr>Either 'fixed' for fixed ordering of colors, or 'random' for a random order. Default is 'fixed'.</descr>
                <option>ShowIndex</option><descr>This option is valid only for bounded polyhedra in 2D. If true, display an index of the plotted element. The default choice is false.</descr>                
        </class>
	</input>
    <input>
        <name>value1</name>
        <descr>Corresponding value to <tt>Prop1</tt>.</descr>
    </input>

    
	<!-- now describe output arguments -->
	<output>
		<name>h</name>
        <descr>Handle related to graphics object.</descr>
		<class name="handle"/>
	</output>

	<!-- we can provide multiple code examples -->
    <example> 
        <descr> Plot two sets in 1D.</descr>
        <descr> The first set is an interval [0, 3]</descr>
        <cmd> x = sdpvar(1); </cmd>
        <cmd> F1 = [ 0&lt;= x &lt;=3 ]; </cmd>
        <cmd> Y1 = YSet(x,F1); </cmd>
        <descr> The second set is an intersection of two sets. </descr>
        <cmd> F2 = [x &lt;= 1; 0.3*x^2 &lt;= 0.5]; </cmd>
        <cmd> Y2 = YSet(x,F2); </cmd>        
        <descr> Put the sets to an array. </descr>
        <cmd> Y = [Y1; Y2]; </cmd>
        <descr> Plot the sets with the dash-dotted line and the size 3. </descr>
        <cmd> Y.plot('LineStyle','-.','LineWidth',3); </cmd>
    </example>
    <example>
        <descr> We have a half circle describe the the following inequalities</descr>
        <cmd> x = sdpvar(2,1); </cmd>
        <cmd> F = [x(1) &lt;=1; x(2)&gt;=1; 0.3*x'*x &lt;= 0.5]; </cmd>
        <descr> Construct the set </descr>
        <cmd> S = YSet(x,F); </cmd>
        <descr> Plot the set with with the olive color, half-transparent with circular markings. </descr>
        <cmd> S.plot('Color','olive','Alpha',0.5,'Marker','o'); </cmd>
    </example>

    <!-- multiple related function can be defined -->
	<related>fplot</related>
	
	<!-- multiple authors can be defined -->
    <author macro="author_cnj"/>
    <author macro="author_herceg"/>

	<!-- finally, the text of the license -->
	<license macro="GPL2"/>
</help>
