<?xml version="1.0" encoding="utf-8" ?>

<help>
	<function>addFunction</function>
	
	<!-- one-line description of the function -->
	<info>
		Attach function to a convex set.
	</info>
	
	<syntax>Set = addFunction(Set,F,FuncName)</syntax>
	<syntax>Set.addFunction(Set,F,FuncName)</syntax>

	<!-- long description of the function -->
	<descr>
        Assign a <tt>Function</tt> object <tt>F</tt> to a convex set <tt>Set</tt> 
        under the name <tt>FuncName</tt>. The set represent the domain of the function.
        The string <tt>FuncName</tt> is obligatory and is used to identify the function
        from the list.
        
        Multiple functions can be assigned to a set, their names must be different. 
	</descr>
	<!-- now describe input arguments -->
	
	<!-- mark inputs as mandatory by providing the "required" attribute -->
	<input required="true">
		<name>Set</name>
        <descr>Any object derived from the <tt>ConvexSet</tt> class, e.g. <tt>Polyhedron</tt>, <tt>YSet</tt>, ...</descr>
		<class name="ConvexSet"/>
	</input>

    <input required="true">
		<name>F</name>
        <descr>Function or an array of functions to be assigned, given as objects derived form <tt>Function</tt> class.</descr>
		<!-- any class name can be used, it can even be omitted -->
		<class name="Function"/>
	</input>

    <input required="true">
		<name>FuncName</name>
        <descr>A string or an cell array of strings that represent the name of the assigned function. Every function must
        have an unique name.</descr>
		<!-- any class name can be used, it can even be omitted -->
		<class name="struct"/>
	</input>

	<!-- now describe output arguments -->
	<output>
		<name>Set</name>
        <descr>Modified object of <tt>ConvexSet</tt> class that has a function stored under the <tt>Func</tt> property. </descr>
		<class name="ConvexSet"/>
	</output>

	<!-- we can provide multiple code examples -->
    <example>
        <descr>Construct polyhedron <i>x&lt;=1</i></descr>		
        <cmd>P = Polyhedron(1, 1)</cmd>
        <descr>Define a function over <i>f(x) = 3x^2+1</i> this set as a <tt>QuadFunction</tt> object. </descr> 
        <cmd>F = QuadFunction(3,0,1) </cmd>		
        <descr>Assign a function <tt>F</tt> to this set <tt>P</tt> under name "f".</descr>
        <cmd> P.addFunction(F,'f') </cmd>
	</example>

    <example> 
        <descr> Construct 2 polyhedra, <i>{P}_{1} = \{ x ~|~ x&lt;=1 \}</i>, <i> {P}_{2} = \{ x ~|~ x&gt;=1 \}</i> </descr>        
        <cmd> P1 = Polyhedron(1,1); P2 = Polyhedron(-1,-1); </cmd>
        <descr> Put the polyhedra to one array. </descr>
        <cmd> P = [P1, P2]; </cmd>
        <descr> Define function <i> f(x) = x/(x-1) </i> that we want to associate to both functions. </descr>
        <cmd> F = Function(@(x)x/(x-1)) </cmd>
        <descr> Add the function to each of the polyhedron in the array <tt>P</tt> and give it the name "f".</descr>
        <cmd> P.addFunction(F,'f') </cmd>
    </example>
    <example>
        <descr> Add two functions <i>{f}_{1}(x) = \sqrt(x_1^2+x_2^2+1)</i> and <i> {f}_{2}(x) = (x_1-2)/(x_2+3) </i> to a circle <i>||x||_2&lt;=1</i> </descr>
        <descr> Define the set using YALMIP </descr>
        <cmd> x = sdpvar(2,1); Set = YSet(x, [norm(x)&lt;=1]); </cmd>
        <descr> Define the functions</descr>
        <cmd> f1 = Function(@(x) sqrt(x(1)^2+x(2)^2+1)); f2 = Function(@(x) (x(1)-2)/(x(2)+3)); </cmd>
        <descr> Add these functions to the circle <tt>Set</tt> </descr>
        <cmd> Set.addFunction(f1, 'polynomial')</cmd>
        <cmd> Set.addFunction(f2, 'rational') </cmd>
        <descr> Plot the functions above the set </descr>
        <cmd> Set.fplot() </cmd>
    </example>

	<!-- multiple related function can be defined -->
	<related>ConvexSet</related>
    <related>Function</related>
    <related>QuadFunction</related>
    <related>AffFunction</related>
    <related>removeFunction</related>
	
	
	<!-- multiple authors can be defined -->
	<author macro="author_herceg"/>

	<!-- finally, the text of the license -->
	<license macro="GPL2"/>
</help>
