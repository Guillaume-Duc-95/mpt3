<?xml version="1.0" encoding="utf-8" ?>

<help>
	<function>removeAllFunctions</function>
	
	<!-- one-line description of the function -->
	<info>
		Remove all functions that are associated to this union of convex sets.
	</info>
	
	<syntax>U = U.removeAllFunctions</syntax>
	<syntax>U = removeAllFunctions(U)</syntax>

	<!-- long description of the function -->
	<descr>
        Removes all <tt>Function</tt> objects associated to this union. 
    </descr>
	
	<!-- mark inputs as mandatory by providing the "required" attribute -->
	<input required="true">
		<name>U</name>
        <descr>Object of the <tt>Union</tt> class that holds objects derived from <tt>ConvexSet</tt> class.</descr>
		<class name="Union"/>
	</input>

	<!-- now describe output arguments -->
	<output>
		<name>U</name>
        <descr>Modified object of <tt>Union</tt> class without the function handles.</descr>
		<class name="Union"/>
	</output>

	<!-- we can provide multiple code examples -->
    <example>
        <descr> Create union of two polyhedra given by Yalmip constraints.</descr>
        <cmd> x = sdpvar(3,1); </cmd>
        <cmd> F1=[randn(12,3)*x&lt;=ones(12,1)];</cmd>
        <cmd> F2=[randn(12,3)*x&lt;=ones(12,1)];</cmd>        
        <cmd> Y(1) = YSet(x,F1); </cmd>
        <cmd> Y(2) = YSet(x,F2); </cmd>
        <descr> Add function handles to each set. </descr>
        <cmd> for i=1:2, 
                Y(i).addFunction(AffFunction(randn(1,3)),'a');
                Y(i).addFunction(AffFunction(randn(1,3)),'b');
              end
        </cmd>
        <descr> Create the union of polyhedra </descr>
        <cmd> U = Union(Y) </cmd>
        <descr> Remove all functions handles from the union</descr>
        <cmd> U.removeAllFunctions </cmd>
    </example>

	<!-- multiple related function can be defined -->
	<related>addFunction</related>
    <related>removeFunction</related>
    
	
	<!-- multiple authors can be defined -->
	<author macro="author_herceg"/>

	<!-- finally, the text of the license -->
	<license macro="GPL2"/>
</help>
